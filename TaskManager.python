import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
import random

# Function to load tasks from CSV file
def load_tasks():
    try:
        return pd.read_csv('tasks.csv')
    except FileNotFoundError:
        return pd.DataFrame(columns=['description', 'priority'])

# Function to save tasks to a CSV file
def save_tasks(tasks):
    tasks.to_csv('tasks.csv', index=False)

# Function to train the task priority classifier
def train_model(tasks):
    vectorizer = CountVectorizer()
    clf = MultinomialNB()
    model = make_pipeline(vectorizer, clf)
    model.fit(tasks['description'], tasks['priority'])
    return model

# Function to add a task to the list
def add_task(tasks, description, priority):
    new_task = pd.DataFrame({'description': [description], 'priority': [priority]})
    tasks = pd.concat([tasks, new_task], ignore_index=True)
    save_tasks(tasks)
    return tasks

# Function to remove a task by description
def remove_task(tasks, description):
    tasks = tasks[tasks['description'] != description]
    save_tasks(tasks)
    return tasks

# Function to list all tasks
def list_tasks(tasks):
    if tasks.empty:
        print("No tasks available.")
    else:
        print(tasks)

# Function to recommend a task based on machine learning
def recommend_task(tasks):
    if not tasks.empty:
        high_priority_tasks = tasks[tasks['priority'] == 'High']
        if not high_priority_tasks.empty:
            random_task = random.choice(high_priority_tasks['description'].tolist())
            print(f"Recommended task: {random_task} - Priority: High")
        else:
            print("No high-priority tasks available for recommendation.")
    else:
        print("No tasks available for recommendations.")

# Main function
def main():
    tasks = load_tasks()
    model = train_model(tasks)

    while True:
        print("\nTask Management App")
        print("1. Add Task")
        print("2. Remove Task")
        print("3. List Tasks")
        print("4. Recommend Task")
        print("5. Exit")

        choice = input("Select an option: ")

        if choice == "1":
            description = input("Enter task description: ")
            priority = input("Enter task priority (Low/Medium/High): ").capitalize()
            tasks = add_task(tasks, description, priority)
            print("Task added successfully.")

        elif choice == "2":
            description = input("Enter task description to remove: ")
            tasks = remove_task(tasks, description)
            print("Task removed successfully.")

        elif choice == "3":
            list_tasks(tasks)

        elif choice == "4":
            recommend_task(tasks)

        elif choice == "5":
            print("Goodbye!")
            break

        else:
            print("Invalid option. Please select a valid option.")

if __name__ == "__main__":
    main()
